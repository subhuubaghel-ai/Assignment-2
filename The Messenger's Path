import java.util.Scanner;
public class MessengersPath {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] grid = new int[n][m];        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                grid[i][j] = sc.nextInt();
            }
        }      
        boolean canReach = dfs(grid, 0, 0, new boolean[n][m]);
        System.out.println(canReach);
        sc.close();
    }
    public static boolean dfs(int[][] grid, int i, int j, boolean[][] visited) {
        int n = grid.length;
        int m = grid[0].length;
        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] == 1 || visited[i][j]) {
            return false;
        }
        if (i == n - 1 && j == m - 1) {
            return true;
        }
        visited[i][j] = true;
        if (dfs(grid, i + 1, j, visited)) return true;
        if (dfs(grid, i - 1, j, visited)) return true;
        if (dfs(grid, i, j + 1, visited)) return true;
        if (dfs(grid, i, j - 1, visited)) return true;
        return false;
    }
}
